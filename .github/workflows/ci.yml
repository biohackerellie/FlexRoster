name: CI

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main"]
  merge_group:

permissions:
  contents: write

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  GO_VERSION: stable
  GOLANGCI_LINT_VERSION: v1.59

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{github.ref != 'refs/heads/main'}}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - name: Copy env
        shell: bash
        run: cp .env.example .env
      - name: Lint
        run: pnpm lint && pnpm lint:ws

  detect-go-modules:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{steps.set-modules.outputs.modules}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{env.GO_VERSION}}
      - id: set-modules
        run: bash ./modules.sh >> $GITHUB_OUTPUT

  golangci:
    needs: detect-go-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        modules: ${{ fromJSON(needs.detect-go-modules.outputs.modules) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: golangci-lint ${{ matrix.modules }}
        uses: golangci/golangci-lint-action@v6
        with:
          working-directory: ${{matrix.modules}}
          version: ${{ env.GOLANGCI_LING_VERSION}}
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - name: Format
        run: pnpm format

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - name: Typecheck
        run: pnpm typecheck
# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

# Go:
#   runs-on: ubuntu-latest
#   steps:
#   - uses: actions/checkout@v4

#   - name: Set up Go
#     uses: actions/setup-go@v4
#     with:
#       go-version: '1.20'

#   - name: Build
#     run: go build -v ./...

#   - name: Test
#     run: go test -v ./...
